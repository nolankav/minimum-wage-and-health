lag_by_1_inf  = lag(Effective.Minimum.Wage.2020.Dollars, n=1,  default=NA),
lag_by_2_inf  = lag(Effective.Minimum.Wage.2020.Dollars, n=2,  default=NA),
lag_by_3_inf  = lag(Effective.Minimum.Wage.2020.Dollars, n=3,  default=NA),
lag_by_4_inf  = lag(Effective.Minimum.Wage.2020.Dollars, n=4,  default=NA),
lag_by_5_inf  = lag(Effective.Minimum.Wage.2020.Dollars, n=5,  default=NA),
lag_by_6_inf  = lag(Effective.Minimum.Wage.2020.Dollars, n=6,  default=NA),
lag_by_7_inf  = lag(Effective.Minimum.Wage.2020.Dollars, n=7,  default=NA),
lag_by_8_inf  = lag(Effective.Minimum.Wage.2020.Dollars, n=8,  default=NA),
lag_by_9_inf  = lag(Effective.Minimum.Wage.2020.Dollars, n=9,  default=NA),
lag_by_10_inf = lag(Effective.Minimum.Wage.2020.Dollars, n=10, default=NA),
lag_by_11_inf = lag(Effective.Minimum.Wage.2020.Dollars, n=11, default=NA),
lag_by_12_inf = lag(Effective.Minimum.Wage.2020.Dollars, n=12, default=NA),
lag_by_13_inf = lag(Effective.Minimum.Wage.2020.Dollars, n=13, default=NA),
lag_by_14_inf = lag(Effective.Minimum.Wage.2020.Dollars, n=14, default=NA),
lag_by_15_inf = lag(Effective.Minimum.Wage.2020.Dollars, n=15, default=NA),
lag_by_16_inf = lag(Effective.Minimum.Wage.2020.Dollars, n=16, default=NA),
lag_by_17_inf = lag(Effective.Minimum.Wage.2020.Dollars, n=17, default=NA)
)
# Merge minimum wage and NSCH data
nsch_all <- left_join(nsch, min_wage_df, by=c("fipsst", "year"))
# Clear old datasets from R
rm(nsch_2016_top, nsch_2017_top, nsch_2018_top,
nsch_2019_top, nsch_2020_top, nsch_2021_top)
##############################################################################
# Supplemental Medicaid dataset preparation
##############################################################################
# Read Medicaid datasets into R
medicaid_1_5_df  <- read.csv("Supplemental data/medicaid_1_5_state_year.csv")
medicaid_6_18_df <- read.csv("Supplemental data/medicaid_6_18_state_year.csv")
# Add columns for 2001 and 2007
# Duplicate data from 2000 and 2006
medicaid_1_5_df$X2001  <- medicaid_1_5_df$X2000
medicaid_1_5_df$X2007  <- medicaid_1_5_df$X2006
medicaid_6_18_df$X2001 <- medicaid_6_18_df$X2000
medicaid_6_18_df$X2007 <- medicaid_6_18_df$X2006
# Restructure data to long format
library(reshape2)
medicaid_1_5_df  <- melt(medicaid_1_5_df, id.vars = c("X"),
variable.name = "year", value.name = "elig_1_5")
medicaid_6_18_df <- melt(medicaid_6_18_df, id.vars = c("X"),
variable.name = "year", value.name = "elig_6_18")
# Clean year variable
# Drop leading "X" in strings
medicaid_1_5_df$year  <- substring(medicaid_1_5_df$year,  2)
medicaid_6_18_df$year <- substring(medicaid_6_18_df$year, 2)
# Rename columns
colnames(medicaid_1_5_df)  <- c("state", "year", "elig_1_5")
colnames(medicaid_6_18_df) <- c("state", "year", "elig_6_18")
# Convert names to FIPS
# Necessary for smooth merge
medicaid_1_5_df$fipsst  <- cdlTools::fips(medicaid_1_5_df$state,  to="FIPS")
medicaid_6_18_df$fipsst <- cdlTools::fips(medicaid_6_18_df$state, to="FIPS")
# Treat year as numeric
medicaid_1_5_df$year  <- as.numeric(medicaid_1_5_df$year)
medicaid_6_18_df$year <- as.numeric(medicaid_6_18_df$year)
# Merge Medicaid and YRBS data
nsch_all <- left_join(nsch_all, medicaid_1_5_df,  by=c("fipsst", "year"))
nsch_all <- left_join(nsch_all, medicaid_6_18_df, by=c("fipsst", "year"))
##############################################################################
# Supplemental EITC dataset preparation
##############################################################################
# Read EITC dataset into R
eitc <- read.csv("Supplemental data/eitc_state_year.csv")
# Merge EITC and YRBS data
nsch_all <- left_join(nsch_all, eitc, by=c("fipsst", "year"))
##############################################################################
# Supplemental TANF dataset preparation
##############################################################################
# Read TANF dataset into R
tanf <- read.csv("Supplemental data/tanf_state_year.csv")
# Merge TANF and YRBS data
nsch_all <- left_join(nsch_all, tanf, by=c("fipsst", "year"))
##############################################################################
# Variable preparation
##############################################################################
# Treat fixed effects as factors
nsch_all$year   <- as.factor(nsch_all$year)
nsch_all$fipsst <- as.factor(nsch_all$fipsst)
# Child's age
nsch_all <- nsch_all %>% mutate(
age = case_when(
sc_age_years %in% c(0:17) ~ sc_age_years
))
# Treat age as factor
nsch_all$age <- as.factor(nsch_all$age)
# Dichotomize age for interaction models
nsch_all <- nsch_all %>% mutate(
age_cat = case_when(
sc_age_years %in% c(13:17) ~ 0, # Adolescents
sc_age_years %in% c(0:12)  ~ 1  # All other children
))
# Child's sex
nsch_all <- nsch_all %>% mutate(
sex = case_when(
sc_sex == 1 ~ "Male",
sc_sex == 2 ~ "Female"
))
nsch_all$sex <- factor(nsch_all$sex, levels = c("Male", "Female"))
# Child's race/ethnicity
nsch_all <- nsch_all %>% mutate(
race_eth = case_when(
sc_hispanic_r == 1    ~ "Hispanic/Latino",
sc_race_r == 1        ~ "White, non-Hispanic/Latino",
sc_race_r == 2        ~ "Black, non-Hispanic/Latino",
sc_race_r == 3        ~ "American Indian or Alaska Native",
sc_race_r %in% c(4:5) ~ "Asian, Native Hawaiian, or Pacific Islander",
sc_race_r %in% c(6:7) ~ "Other or mixed race",
))
nsch_all$race_eth <- factor(nsch_all$race_eth, levels = c("White, non-Hispanic/Latino", "Black, non-Hispanic/Latino", "Hispanic/Latino", "American Indian or Alaska Native", "Asian, Native Hawaiian, or Pacific Islander", "Other or mixed race"))
# Dichotomoize race/ethnicity
# Black/Latino vs. other for interaction models
nsch_all <- nsch_all %>% mutate(
race_eth_cat = case_when(
sc_hispanic_r == 1      ~ 0, # Black or Hispanic/Latino
sc_race_r == 2          ~ 0, # Black or Hispanic/Latino
sc_race_r %in% c(1,3:7) ~ 1  # All other races
))
# Adults' highest educational attainment
nsch_all <- nsch_all %>% mutate(
adult_edu = case_when(
higrade_tvis == 1 ~ "Less than high school",
higrade_tvis == 2 ~ "High school (including vocational)",
higrade_tvis == 3 ~ "Some college or associate degree",
higrade_tvis == 4 ~ "College degree or higher"
))
nsch_all$adult_edu <- factor(nsch_all$adult_edu, levels = c("Less than high school", "High school (including vocational)", "Some college or associate degree", "College degree or higher"))
# Dichotomize educational attainment
# High school (or less) vs. some college (or more)
# Adults' highest educational attainment
nsch_all <- nsch_all %>% mutate(
adult_edu_cat = case_when(
higrade_tvis %in% c(1:2) ~ 0, # High school or less
higrade_tvis %in% c(3:4) ~ 1  # All other education levels
))
# Generate mean estimated FPL
# Later NSCH years generated 6 imputed FPLs if a household was missing income
nsch_all$fpl_mean <- rowMeans(cbind(nsch_all$fpl_i1, nsch_all$fpl_i2, nsch_all$fpl_i3,
nsch_all$fpl_i4, nsch_all$fpl_i5, nsch_all$fpl_i6), na.rm=T)
# Household's federal poverty level
nsch_all <- nsch_all %>% mutate(
fpl_category = case_when(
fpl %in% c(50:99)   | fpl_mean < 100 ~ "Less than 100%",
fpl %in% c(100:199) | fpl_mean < 200 ~ "100% to 199%",
fpl %in% c(200:299) | fpl_mean < 300 ~ "200% to 299%",
fpl %in% c(300:399) | fpl_mean < 400 ~ "300% to 399%",
fpl %in% c(400:999) | fpl_mean < 999 ~ "400% or greater"
))
nsch_all$fpl_category <- factor(nsch_all$fpl_category, levels = c("Less than 100%", "100% to 199%", "200% to 299%", "300% to 399%", "400% or greater"))
# Dichotomize FPL
# Low-income (<200% FPL) vs. higher-income
nsch_all <- nsch_all %>% mutate(
low_income = case_when(
fpl %in% c(50:199)  | fpl_mean < 200 ~ 0, # Lower income
fpl %in% c(200:999) | fpl_mean < 999 ~ 1  # Higher income
))
# Family structure
nsch_all <- nsch_all %>% mutate(
family_struc = case_when(
family %in% c(1,3)  | family_r %in% c(1,3)  ~ "Two parents, married",
family %in% c(2,4)  | family_r %in% c(2,4)  ~ "Two parents, not married",
family %in% c(5:8)  | family_r %in% c(5:6)  ~ "Single parent",
family %in% c(1:99) | family_r %in% c(1:99) ~ "Another family structure"
))
nsch_all$family_struc <- factor(nsch_all$family_struc, levels = c("Two parents, married", "Two parents, not married", "Single parent", "Another family structure"))
# Household nativity
nsch_all <- nsch_all %>% mutate(
nativity = case_when(
house_gen == 1 ~ "First-generation household",
house_gen == 2 ~ "Second-generation household",
house_gen == 3 ~ "Third-generation household or higher"
))
nsch_all$nativity <- factor(nsch_all$nativity, levels = c("First-generation household", "Second-generation household", "Third-generation household or higher"))
# Dichotomize household nativity
# First/second-generation vs. higher
nsch_all <- nsch_all %>% mutate(
nativity_cat = case_when(
house_gen %in% c(1:2) ~ 0,
house_gen %in% c(3)   ~ 1
))
# Current dignosed depression
nsch_all <- nsch_all %>% mutate(
depression = case_when(
k2q32b %in% c(1)                      ~ 1,
k2q32b %in% c(2) | k2q32a %in% c(1:2) ~ 0
))
# Current diagnosed anxiety
nsch_all <- nsch_all %>% mutate(
anxiety = case_when(
k2q33b %in% c(1)                      ~ 1,
k2q33b %in% c(2) | k2q33a %in% c(1:2) ~ 0
))
# Current ADD/ADHD
nsch_all <- nsch_all %>% mutate(
adhd = case_when(
k2q31b %in% c(1)                      ~ 1,
k2q31b %in% c(2) | k2q31a %in% c(1:2) ~ 0
))
# Current behavior problems
nsch_all <- nsch_all %>% mutate(
behavior = case_when(
k2q34b %in% c(1)                      ~ 1,
k2q34b %in% c(2) | k2q34a %in% c(1:2) ~ 0
))
# Stomach/digestive issues
nsch_all <- nsch_all %>% mutate(
stomach_r = case_when(
stomach %in% c(1) ~ 1,
stomach %in% c(2) ~ 0
))
# Unmet health needs (any)
nsch_all <- nsch_all %>% mutate(
unmet_needs = case_when(
k4q27 %in% c(1) ~ 1,
k4q27 %in% c(2) ~ 0,
))
# Unmet mental health needs
nsch_all <- nsch_all %>% mutate(
unmet_mental = case_when(
k4q28x04 %in% c(1)   ~ 1,
k4q27    %in% c(1:2) ~ 0
))
# Missed days of school
# Dichotomize is as 0-6 vs 7+ days
nsch_all <- nsch_all %>% mutate(
missed_school = case_when(
k7q02r_r %in% c(1:3,6) ~ 0,
k7q02r_r %in% c(4:5)   ~ 1
))
# Child's employment
nsch_all <- nsch_all %>% mutate(
child_job = case_when(
k7q38 == 1 ~ 1,
k7q38 == 2 ~ 0
))
# Lifetime minimum wage
nsch_all <- nsch_all %>% mutate(
wage_life = case_when(
sc_age_years == 0 ~ Effective.Minimum.Wage.2020.Dollars,
sc_age_years == 1 ~ (Effective.Minimum.Wage.2020.Dollars + lag_by_1_inf)/2,
sc_age_years == 2 ~ (Effective.Minimum.Wage.2020.Dollars + lag_by_1_inf +
lag_by_2_inf)/3,
sc_age_years == 3 ~ (Effective.Minimum.Wage.2020.Dollars + lag_by_1_inf +
lag_by_2_inf + lag_by_3_inf)/4,
sc_age_years == 4 ~ (Effective.Minimum.Wage.2020.Dollars + lag_by_1_inf +
lag_by_2_inf + lag_by_3_inf + lag_by_4_inf)/5,
sc_age_years == 5 ~ (Effective.Minimum.Wage.2020.Dollars + lag_by_1_inf +
lag_by_2_inf + lag_by_3_inf + lag_by_4_inf + lag_by_5_inf)/6,
sc_age_years == 6 ~ (Effective.Minimum.Wage.2020.Dollars + lag_by_1_inf +
lag_by_2_inf + lag_by_3_inf + lag_by_4_inf + lag_by_5_inf +
lag_by_6_inf)/7,
sc_age_years == 7 ~ (Effective.Minimum.Wage.2020.Dollars + lag_by_1_inf +
lag_by_2_inf + lag_by_3_inf + lag_by_4_inf + lag_by_5_inf +
lag_by_6_inf + lag_by_7_inf)/8,
sc_age_years == 8 ~ (Effective.Minimum.Wage.2020.Dollars + lag_by_1_inf +
lag_by_2_inf + lag_by_3_inf + lag_by_4_inf + lag_by_5_inf +
lag_by_6_inf + lag_by_7_inf + lag_by_8_inf)/9,
sc_age_years == 9 ~ (Effective.Minimum.Wage.2020.Dollars + lag_by_1_inf +
lag_by_2_inf + lag_by_3_inf + lag_by_4_inf + lag_by_5_inf +
lag_by_6_inf + lag_by_7_inf + lag_by_8_inf + lag_by_9_inf)/10,
sc_age_years == 10 ~ (Effective.Minimum.Wage.2020.Dollars + lag_by_1_inf +
lag_by_2_inf + lag_by_3_inf + lag_by_4_inf + lag_by_5_inf +
lag_by_6_inf + lag_by_7_inf + lag_by_8_inf + lag_by_9_inf +
lag_by_10_inf)/11,
sc_age_years == 11 ~ (Effective.Minimum.Wage.2020.Dollars + lag_by_1_inf +
lag_by_2_inf + lag_by_3_inf + lag_by_4_inf + lag_by_5_inf +
lag_by_6_inf + lag_by_7_inf + lag_by_8_inf + lag_by_9_inf +
lag_by_10_inf + lag_by_11_inf)/12,
sc_age_years == 12 ~ (Effective.Minimum.Wage.2020.Dollars + lag_by_1_inf +
lag_by_2_inf +  lag_by_3_inf +  lag_by_4_inf + lag_by_5_inf +
lag_by_6_inf +  lag_by_7_inf +  lag_by_8_inf + lag_by_9_inf +
lag_by_10_inf + lag_by_11_inf + lag_by_12_inf)/13,
sc_age_years == 13 ~ (Effective.Minimum.Wage.2020.Dollars + lag_by_1_inf +
lag_by_2_inf +  lag_by_3_inf +  lag_by_4_inf +  lag_by_5_inf +
lag_by_6_inf +  lag_by_7_inf +  lag_by_8_inf +  lag_by_9_inf +
lag_by_10_inf + lag_by_11_inf + lag_by_12_inf + lag_by_13_inf)/14,
sc_age_years == 14 ~ (Effective.Minimum.Wage.2020.Dollars + lag_by_1_inf +
lag_by_2_inf +  lag_by_3_inf +  lag_by_4_inf +  lag_by_5_inf +
lag_by_6_inf +  lag_by_7_inf +  lag_by_8_inf +  lag_by_9_inf +
lag_by_10_inf + lag_by_11_inf + lag_by_12_inf + lag_by_13_inf +
lag_by_14_inf)/15,
sc_age_years == 15 ~ (Effective.Minimum.Wage.2020.Dollars + lag_by_1_inf +
lag_by_2_inf +  lag_by_3_inf +  lag_by_4_inf +  lag_by_5_inf +
lag_by_6_inf +  lag_by_7_inf +  lag_by_8_inf +  lag_by_9_inf +
lag_by_10_inf + lag_by_11_inf + lag_by_12_inf + lag_by_13_inf +
lag_by_14_inf + lag_by_15_inf)/16,
sc_age_years == 16 ~ (Effective.Minimum.Wage.2020.Dollars + lag_by_1_inf +
lag_by_2_inf +  lag_by_3_inf +  lag_by_4_inf +  lag_by_5_inf +
lag_by_6_inf +  lag_by_7_inf +  lag_by_8_inf +  lag_by_9_inf +
lag_by_10_inf + lag_by_11_inf + lag_by_12_inf + lag_by_13_inf +
lag_by_14_inf + lag_by_15_inf + lag_by_16_inf)/17,
sc_age_years == 17 ~ (Effective.Minimum.Wage.2020.Dollars + lag_by_1_inf +
lag_by_2_inf +  lag_by_3_inf +  lag_by_4_inf +  lag_by_5_inf +
lag_by_6_inf +  lag_by_7_inf +  lag_by_8_inf +  lag_by_9_inf +
lag_by_10_inf + lag_by_11_inf + lag_by_12_inf + lag_by_13_inf +
lag_by_14_inf + lag_by_15_inf + lag_by_16_inf + lag_by_17_inf)/18
))
# State has EITC program
nsch_all <- nsch_all %>% mutate(
has_eitc = case_when(
federal_pct > 0 ~ 1,
TRUE ~ 0
))
# Rescale weight so mean is 1
nsch_all$weights <- nsch_all$fwc/1946.27
# Generate nested sampling clusters
nsch_all$cluster <- paste0(nsch_all$strata, "-", nsch_all$fipsst)
##############################################################################
# Table: Demographic characteristics
##############################################################################
# At least 1 outcome
nsch_all <- nsch_all %>% mutate(
has_outcome = case_when(
!is.na(depression) | !is.na(anxiety) | !is.na(adhd) |
!is.na(behavior) | !is.na(stomach_r) | !is.na(unmet_needs) |
!is.na(unmet_mental) | !is.na(missed_school) | !is.na(child_job) ~ 1
))
# Complete cases for covariates
nsch_all_model <- nsch_all %>%
subset(., age %in% c(3:17)) %>%
filter_at(vars(Effective.Minimum.Wage, has_outcome, age, sex, race_eth,
family_struc, adult_edu, nativity), all_vars(!is.na(.)))
# Child characteristics: unweighted
summary(tableby(~ as.numeric(age) + sex + race_eth + family_struc + adult_edu + nativity + fpl_category,
nsch_all_model, digits.pct=0), text=T)
# Child characteristics: weighted
summary(tableby(~ as.numeric(age) + sex + race_eth + family_struc + adult_edu + nativity + fpl_category,
nsch_all_model, digits.pct=0, weights=fwc/1946.27), text=T)
# Mental health outcomes: weighted
summary(tableby(~ depression + anxiety + adhd + behavior + stomach_r +
unmet_needs + unmet_mental + missed_school + child_job,
nsch_all_model, digits.pct=0, weights=weights), text=T)
##############################################################################
# Figure: Associations between FPL and mental health
##############################################################################
# Reset reference FPL category
nsch_all_model$fpl_category <- factor(nsch_all_model$fpl_category, levels = c("400% or greater", "Less than 100%", "100% to 199%", "200% to 299%", "300% to 399%"))
# Depression
model_fpl_dep <- felm(depression ~ fpl_category +
age + sex + race_eth + family_struc + adult_edu + nativity |
year + fipsst | 0 | fipsst,
data    = nsch_all_model,
weights = nsch_all_model$weights)
# Anxiety
model_fpl_anx <- felm(anxiety ~ fpl_category +
age + sex + race_eth + family_struc + adult_edu + nativity |
year + fipsst | 0 | fipsst,
data    = nsch_all_model,
weights = nsch_all_model$weights)
# ADD/ADHD
model_fpl_add <- felm(adhd ~ fpl_category +
age + sex + race_eth + family_struc + adult_edu + nativity |
year + fipsst | 0 | fipsst,
data    = nsch_all_model,
weights = nsch_all_model$weights)
# Behavioral problems
model_fpl_beh <- felm(behavior ~ fpl_category +
age + sex + race_eth + family_struc + adult_edu + nativity |
year + fipsst | 0 | fipsst,
data    = nsch_all_model,
weights = nsch_all_model$weights)
# Digestive issues
model_fpl_dig <- felm(stomach_r ~ fpl_category +
age + sex + race_eth + family_struc + adult_edu + nativity |
year + fipsst | 0 | fipsst,
data    = nsch_all_model,
weights = nsch_all_model$weights)
# Any unmet care
model_fpl_unm <- felm(unmet_needs ~ fpl_category +
age + sex + race_eth + family_struc + adult_edu + nativity |
year + fipsst | 0 | fipsst,
data    = nsch_all_model,
weights = nsch_all_model$weights)
# Unmet mental care
model_fpl_men <- felm(unmet_mental ~ fpl_category +
age + sex + race_eth + family_struc + adult_edu + nativity |
year + fipsst | 0 | fipsst,
data    = nsch_all_model,
weights = nsch_all_model$weights)
# 7+ school absences
model_fpl_sch <- felm(missed_school ~ fpl_category +
age + sex + race_eth + family_struc + adult_edu + nativity |
year + fipsst | 0 | fipsst,
data    = nsch_all_model,
weights = nsch_all_model$weights)
# Employment
model_fpl_job <- felm(child_job ~ fpl_category +
age + sex + race_eth + family_struc + adult_edu + nativity |
year + fipsst | 0 | fipsst,
data    = nsch_all_model,
weights = nsch_all_model$weights)
# Dataframe of rates
means_all <- as.data.frame(rbind(
# Depression
cbind("Depression", "Less than 100%",  coef(model_fpl_dep)[1], model_fpl_dep$cse[1]),
cbind("Depression", "100% to 199%",    coef(model_fpl_dep)[2], model_fpl_dep$cse[2]),
cbind("Depression", "200% to 299%",    coef(model_fpl_dep)[3], model_fpl_dep$cse[3]),
cbind("Depression", "300% to 399%",    coef(model_fpl_dep)[4], model_fpl_dep$cse[4]),
cbind("Depression", "400% or greater", 0, 0),
# Anxiety
cbind("Anxiety", "Less than 100%",  coef(model_fpl_anx)[1], model_fpl_anx$cse[1]),
cbind("Anxiety", "100% to 199%",    coef(model_fpl_anx)[2], model_fpl_anx$cse[2]),
cbind("Anxiety", "200% to 299%",    coef(model_fpl_anx)[3], model_fpl_anx$cse[3]),
cbind("Anxiety", "300% to 399%",    coef(model_fpl_anx)[4], model_fpl_anx$cse[4]),
cbind("Anxiety", "400% or greater", 0, 0),
# ADD/ADHD
cbind("ADD/ADHD", "Less than 100%",  coef(model_fpl_add)[1], model_fpl_add$cse[1]),
cbind("ADD/ADHD", "100% to 199%",    coef(model_fpl_add)[2], model_fpl_add$cse[2]),
cbind("ADD/ADHD", "200% to 299%",    coef(model_fpl_add)[3], model_fpl_add$cse[3]),
cbind("ADD/ADHD", "300% to 399%",    coef(model_fpl_add)[4], model_fpl_add$cse[4]),
cbind("ADD/ADHD", "400% or greater", 0, 0),
# Behavioral problems
cbind("Behavioral prob.", "Less than 100%",  coef(model_fpl_beh)[1], model_fpl_beh$cse[1]),
cbind("Behavioral prob.", "100% to 199%",    coef(model_fpl_beh)[2], model_fpl_beh$cse[2]),
cbind("Behavioral prob.", "200% to 299%",    coef(model_fpl_beh)[3], model_fpl_beh$cse[3]),
cbind("Behavioral prob.", "300% to 399%",    coef(model_fpl_beh)[4], model_fpl_beh$cse[4]),
cbind("Behavioral prob.", "400% or greater", 0, 0),
# Digestive issues
cbind("Digestive issues", "Less than 100%",  coef(model_fpl_dig)[1], model_fpl_dig$cse[1]),
cbind("Digestive issues", "100% to 199%",    coef(model_fpl_dig)[2], model_fpl_dig$cse[2]),
cbind("Digestive issues", "200% to 299%",    coef(model_fpl_dig)[3], model_fpl_dig$cse[3]),
cbind("Digestive issues", "300% to 399%",    coef(model_fpl_dig)[4], model_fpl_dig$cse[4]),
cbind("Digestive issues", "400% or greater", 0, 0),
# Any unmet care
cbind("Any unmet care", "Less than 100%",  coef(model_fpl_unm)[1], model_fpl_unm$cse[1]),
cbind("Any unmet care", "100% to 199%",    coef(model_fpl_unm)[2], model_fpl_unm$cse[2]),
cbind("Any unmet care", "200% to 299%",    coef(model_fpl_unm)[3], model_fpl_unm$cse[3]),
cbind("Any unmet care", "300% to 399%",    coef(model_fpl_unm)[4], model_fpl_unm$cse[4]),
cbind("Any unmet care", "400% or greater", 0, 0),
# Unmet mental care
cbind("Unmet mental care", "Less than 100%",  coef(model_fpl_men)[1], model_fpl_men$cse[1]),
cbind("Unmet mental care", "100% to 199%",    coef(model_fpl_men)[2], model_fpl_men$cse[2]),
cbind("Unmet mental care", "200% to 299%",    coef(model_fpl_men)[3], model_fpl_men$cse[3]),
cbind("Unmet mental care", "300% to 399%",    coef(model_fpl_men)[4], model_fpl_men$cse[4]),
cbind("Unmet mental care", "400% or greater", 0, 0),
# 7+ school absences
cbind("7+ school absences", "Less than 100%",  coef(model_fpl_sch)[1], model_fpl_sch$cse[1]),
cbind("7+ school absences", "100% to 199%",    coef(model_fpl_sch)[2], model_fpl_sch$cse[2]),
cbind("7+ school absences", "200% to 299%",    coef(model_fpl_sch)[3], model_fpl_sch$cse[3]),
cbind("7+ school absences", "300% to 399%",    coef(model_fpl_sch)[4], model_fpl_sch$cse[4]),
cbind("7+ school absences", "400% or greater", 0, 0),
# Employment
cbind("Employment", "Less than 100%",  coef(model_fpl_job)[1], model_fpl_job$cse[1]),
cbind("Employment", "100% to 199%",    coef(model_fpl_job)[2], model_fpl_job$cse[2]),
cbind("Employment", "200% to 299%",    coef(model_fpl_job)[3], model_fpl_job$cse[3]),
cbind("Employment", "300% to 399%",    coef(model_fpl_job)[4], model_fpl_job$cse[4]),
cbind("Employment", "400% or greater", 0, 0)
))
colnames(means_all) <- c("Outcome", "FPL level", "value", "se")
# Reorder factor levels
means_all$`FPL level` <- factor(means_all$`FPL level`, levels = c("Less than 100%", "100% to 199%", "200% to 299%", "300% to 399%", "400% or greater"))
means_all$Outcome <- factor(means_all$Outcome, levels = c("Depression", "Anxiety", "ADD/ADHD", "Behavioral prob.", "Digestive issues", "Any unmet care", "Unmet mental care", "7+ school absences", "Employment"))
# Treat adjusted means and SEs as numeric
means_all$value <- as.numeric(as.character(means_all$value))
means_all$se    <- as.numeric(as.character(means_all$se))
# Load package
library(ggh4x)
# Plot means by outcome
plot_means <- ggplot(means_all, aes(x=`FPL level`, y=value, fill=`FPL level`)) +
geom_hline(yintercept=0, color="black", linewidth=0.25) +
geom_point(stat = "identity") +
geom_errorbar(aes(ymin=value-1.96*se, ymax=value+1.96*se), width=0.2) +
ylab("Adjusted rates of mental health outcomes,\nrelative to children living at 400% FPL") +
xlab("Household FPL level") +
theme_test() +
theme(legend.position = "none",
text = element_text(size = 10, face = "bold"),
axis.text.x = element_text(angle=45, hjust=1, vjust=1),
axis.ticks = element_blank(),
strip.background = element_blank(),
legend.title = element_blank(),
panel.grid.major.x = element_blank(),
panel.grid.major.y = element_line(color="light gray", linewidth=0.5),
panel.grid.minor.y = element_line(color="light gray", linewidth=0.25)) +
scale_fill_grey(start=0, end=0.7, name="") +
facet_wrap(~Outcome, nrow=3, scales="free") +
facetted_pos_scales(
y = list(
Outcome %in% c("Depression", "Anxiety", "ADD/ADHD", "Behavioral prob.", "Digestive issues", "Any unmet care", "Unmet mental care", "7+ school absences") ~
scale_y_continuous(limits = c(-0.02, 0.08),
labels = function(x) paste0(x*100," pp"),
breaks = seq(-0.1, 0.1, 0.02),
minor_breaks = seq(-0.1, 0.1, 0.01)),
Outcome == "Employment" ~
scale_y_continuous(limits = c(-0.08, 0.02),
labels = function(x) paste0(x*100," pp"),
breaks = seq(-0.1, 0.1, 0.02),
minor_breaks = seq(-0.1, 0.1, 0.01))
)
)
# Export figure
ggsave(plot=plot_means, file="Exhibits/NSCH adjusted rates of outcomes.pdf",
width=5.5, height=7.5, units='in', dpi=600)
##############################################################################
# Functions for TWFE models
##############################################################################
# Generate new state variable
# Lowercase necessary for maps function
min_wage_df$state <- min_wage_df$State
# Generate lagged minimum wage
# Gets minimum wage of 4 years prior in same state
min_wage_df <- min_wage_df %>%
group_by(state) %>%
mutate(lag_by_4 = lag(Effective.Minimum.Wage, n=4, default=NA))
# Compute change in minimum wage
# Note: Must use 2020 df when making map
min_wage_df$change <- min_wage_df$Effective.Minimum.Wage - min_wage_df$lag_by_4
# Subset to years of interest
min_wage_2016 <- subset(min_wage_df, year %in% c(2016))
min_wage_2020 <- subset(min_wage_df, year %in% c(2020))
# Descriptives about minimum wage
table(subset(min_wage_2020, fipsst %in% c(0:56))$change)
table(subset(min_wage_2020, fipsst %in% c(0:56))$change == 0)
